name: Update MCSR Ranked Data

on:
  schedule:
    - cron: '15 4 * * *'
  workflow_dispatch: 

jobs:
  update-data:
    runs-on: ubuntu-latest # Use a standard Linux runner
    permissions:
      contents: write # Allow the job to push changes back to the repo

    steps:
      - name: Checkout repository # Get the code and current CSV
        uses: actions/checkout@v4

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.10' # Or your desired Python version

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install requests # Only requests is needed by the script

      - name: Run the update script
        run: python mcsr_updater.py # Replace with your actual script name

      - name: Commit and push changes # Only commit if CSV file actually changed
        run: |
          git config --global user.name 'github-actions[bot]' # Commit as the actions bot
          git config --global user.email 'github-actions[bot]@users.noreply.github.com'
          # Check if the specific CSV file has changes staged
          # Use 'git diff --quiet -- path/to/your.csv' if you haven't added it yet
          git add mcsr_user_data.csv # Stage the potentially updated CSV (replace with actual name)
          # Check if there are staged changes specifically for the CSV
          if ! git diff --staged --quiet mcsr_user_data.csv; then
            git commit -m "Automated MCSR data update ($(date +'%Y-%m-%d %H:%M:%S'))"
            git push
            echo "Changes detected and pushed."
          else
            echo "No changes detected in mcsr_user_data.csv."
          fi
